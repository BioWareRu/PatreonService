name: "Deploy"
on:
  push:
    tags:
      - '*.*.*'

jobs:
  deployment:
    runs-on: ubuntu-latest
    container: ghcr.io/sitkoru/actions-container
    env:
      PROJECT: "PatreonService"
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      - name: Prepare
        id: prep
        shell: bash
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKER_IMAGE_NAME }}
          VERSION=${GITHUB_REF#refs/tags/}
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
              MINOR=${VERSION%.*}
              MAJOR=${MINOR%.*}
              TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
          fi
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Publish app
        run: dotnet publish src/${{ env.PROJECT}}/${{ env.PROJECT}}.csproj -c Release /p:Version=${{ steps.prep.outputs.version }} -o app
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
      - name: Login to Docker Registry
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKER_REGISTRY_LOGIN }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
      - name: Build and push docker image
        uses: docker/build-push-action@v2.7.0
        with:
          file: ./src/${{ env.PROJECT}}/Dockerfile
          context: ./app
          build-args: version=${{ steps.prep.outputs.version }}
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
      - name: Update Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            export VERSION=${{ steps.prep.outputs.version }}
            cd ${{ secrets.HOST_WORKING_DIR }} 
            ${{ secrets.HOST_COMPOSE_SCRIPT }} up -d ${{ secrets.SERVICE_NAME }}
